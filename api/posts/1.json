{"total":5,"pageSize":12,"pageCount":1,"data":[{"title":"使用std::any在一个变量中存储任意类型的值","uid":"c7d3b952c43c4d1d37f371080088b081","slug":"使用stdany在一个变量中存储任意类型的值","date":"2022-02-26T03:52:24.000Z","updated":"2022-02-26T03:53:37.847Z","comments":true,"path":"api/articles/使用stdany在一个变量中存储任意类型的值.json","cover":null,"text":" 使用std::any在一个变量中存储任意类型的值 0.std::any简介 std::any是一种在C++ 17标准中被加入的值类型,其变量在可以更改其类型的同时保持类型安全性.同时std::any不需要在初始化时提供其值可能的类型.换句话说,std::any可以存储任意类型的...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"Modern C++","slug":"Modern-C","count":1,"path":"api/categories/Modern-C.json"},{"name":"C++","slug":"Modern-C/C","count":1,"path":"api/categories/Modern-C/C.json"}],"tags":[{"name":"C++ 17","slug":"C-17","count":1,"path":"api/tags/C-17.json"},{"name":"std::any","slug":"std-any","count":1,"path":"api/tags/std-any.json"},{"name":"Modern C++","slug":"Modern-C","count":1,"path":"api/tags/Modern-C.json"}],"author":{"name":"Minecraft1248","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/10/89a7ea01b14a6553.jpg","link":"/","description":"Helium项目开发人员lol","socials":{"github":"https://github.com/Minecraft1248","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/270016803"}}}},"feature":true},{"title":"《算法基础》学习笔记-排序算法测试源代码","uid":"edd55adac64d0984201add6954665563","slug":"Algorithm-Unlocked-Sort-Test-Source-Code","date":"2021-10-30T16:13:46.000Z","updated":"2021-10-30T16:15:45.770Z","comments":true,"path":"api/articles/Algorithm-Unlocked-Sort-Test-Source-Code.json","cover":"https://s3.bmp.ovh/imgs/2021/10/5bcb09e1b9a4aeb0.jpg","text":"#include&lt;iostream&gt; #include&lt;cstdlib&gt; #include&lt;ctime&gt; #include&lt;vector&gt; #define INF 0x7FFFFFFF using namespace std; in...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"算法基础","slug":"算法基础","count":3,"path":"api/categories/算法基础.json"},{"name":"Algorithms Unlocked","slug":"算法基础/Algorithms-Unlocked","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked.json"},{"name":"学习笔记","slug":"算法基础/Algorithms-Unlocked/学习笔记","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked/学习笔记.json"}],"tags":[{"name":"Notes","slug":"Notes","count":3,"path":"api/tags/Notes.json"},{"name":"Sort","slug":"Sort","count":3,"path":"api/tags/Sort.json"},{"name":"排序算法","slug":"排序算法","count":2,"path":"api/tags/排序算法.json"}],"author":{"name":"Minecraft1248","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/10/89a7ea01b14a6553.jpg","link":"/","description":"Helium项目开发人员lol","socials":{"github":"https://github.com/Minecraft1248","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/270016803"}}}},"feature":true},{"title":"《算法基础》学习笔记-线性搜索算法","uid":"2e4dd07c9efba521a4f50b17ccdbb5c4","slug":"Algorithm-Unlocked-Note-2021-10-29-linear-search","date":"2021-10-29T10:28:24.000Z","updated":"2022-02-26T03:51:41.744Z","comments":true,"path":"api/articles/Algorithm-Unlocked-Note-2021-10-29-linear-search.json","cover":"https://s3.bmp.ovh/imgs/2021/10/5bcb09e1b9a4aeb0.jpg","text":" 《算法基础》学习笔记 一.线性搜索算法 《算法基础》在讲下列算法之前是在讲变量,循环等基础,而且我确信有点基础的人第一个想出来的线性搜索算法也应该是原书中BetterLinearSearch()这样的,故直接跳过 1.BetterLinearSearch() C++实现: #d...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法基础","slug":"算法基础","count":3,"path":"api/categories/算法基础.json"},{"name":"Algorithms Unlocked","slug":"算法基础/Algorithms-Unlocked","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked.json"},{"name":"学习笔记","slug":"算法基础/Algorithms-Unlocked/学习笔记","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked/学习笔记.json"}],"tags":[{"name":"Notes","slug":"Notes","count":3,"path":"api/tags/Notes.json"},{"name":"Sort","slug":"Sort","count":3,"path":"api/tags/Sort.json"},{"name":"线性搜索算法","slug":"线性搜索算法","count":1,"path":"api/tags/线性搜索算法.json"}],"author":{"name":"Minecraft1248","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/10/89a7ea01b14a6553.jpg","link":"/","description":"Helium项目开发人员lol","socials":{"github":"https://github.com/Minecraft1248","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/270016803"}}}},"feature":true},{"title":"《算法基础》学习笔记-比较排序算法","uid":"4b62e9d40a3e4e08517eb0d7ae0aa728","slug":"Algorithm-Unlocked-Note-2021-10-29-sort","date":"2021-10-29T10:27:54.000Z","updated":"2021-11-13T11:46:50.756Z","comments":true,"path":"api/articles/Algorithm-Unlocked-Note-2021-10-29-sort.json","cover":"https://s3.bmp.ovh/imgs/2021/10/5bcb09e1b9a4aeb0.jpg","text":" 《算法基础》学习笔记 二.比较排序算法 0.定义: ​ 只使用对排序关键字的比较操作来进行排序的算法,称为比较排序算法. ​ 此处仅讨论对将数组排序成递增顺序的排序算法,即数组中每个元素均大于等于其前驱.要进行递增的比较排序,需要定义排序关键字的&quot;小于&quot;等判...","link":"","photos":[],"count_time":{"symbolsCount":"9.6k","symbolsTime":"9 mins."},"categories":[{"name":"算法基础","slug":"算法基础","count":3,"path":"api/categories/算法基础.json"},{"name":"Algorithms Unlocked","slug":"算法基础/Algorithms-Unlocked","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked.json"},{"name":"学习笔记","slug":"算法基础/Algorithms-Unlocked/学习笔记","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked/学习笔记.json"}],"tags":[{"name":"Notes","slug":"Notes","count":3,"path":"api/tags/Notes.json"},{"name":"Sort","slug":"Sort","count":3,"path":"api/tags/Sort.json"},{"name":"排序算法","slug":"排序算法","count":2,"path":"api/tags/排序算法.json"}],"author":{"name":"Minecraft1248","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/10/89a7ea01b14a6553.jpg","link":"/","description":"Helium项目开发人员lol","socials":{"github":"https://github.com/Minecraft1248","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/270016803"}}}}},{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2021-10-09T13:19:59.472Z","updated":"2021-10-09T13:19:59.472Z","comments":true,"path":"api/articles/hello-world.json","cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":436,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Minecraft1248","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/10/89a7ea01b14a6553.jpg","link":"/","description":"Helium项目开发人员lol","socials":{"github":"https://github.com/Minecraft1248","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/270016803"}}}}}]}