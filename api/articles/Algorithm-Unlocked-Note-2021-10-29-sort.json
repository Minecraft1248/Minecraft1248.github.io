{"title":"《算法基础》学习笔记-比较排序算法","uid":"4b62e9d40a3e4e08517eb0d7ae0aa728","slug":"Algorithm-Unlocked-Note-2021-10-29-sort","date":"2021-10-29T10:27:54.000Z","updated":"2021-11-13T11:46:50.756Z","comments":true,"path":"api/articles/Algorithm-Unlocked-Note-2021-10-29-sort.json","keywords":"Minecraft1248","cover":"https://s3.bmp.ovh/imgs/2021/10/5bcb09e1b9a4aeb0.jpg","content":"<h1 id=\"算法基础学习笔记\"><a class=\"markdownIt-Anchor\" href=\"#算法基础学习笔记\"></a> 《算法基础》学习笔记</h1>\n<h2 id=\"二比较排序算法\"><a class=\"markdownIt-Anchor\" href=\"#二比较排序算法\"></a> 二.比较排序算法</h2>\n<h3 id=\"0定义\"><a class=\"markdownIt-Anchor\" href=\"#0定义\"></a> 0.定义:</h3>\n<p>​\t<strong>只使用对排序关键字的比较操作</strong>来进行排序的算法,称为<strong>比较排序算法</strong>.</p>\n<p>​\t此处仅讨论对将数组排序成递增顺序的排序算法,即数组中每个元素<strong>均大于等于其前驱</strong>.要进行递增的比较排序,<strong>需要定义排序关键字的&quot;小于&quot;等判断的意义</strong>.</p>\n<p>​\t在排序时,参与排序比较的数据称之为<strong>排序关键字</strong>,与排序关键字相关联的数据称为<strong>卫星数据</strong>.</p>\n<h3 id=\"1选择排序\"><a class=\"markdownIt-Anchor\" href=\"#1选择排序\"></a> 1.选择排序</h3>\n<h4 id=\"选择排序的c实现\"><a class=\"markdownIt-Anchor\" href=\"#选择排序的c实现\"></a> 选择排序的C++实现:</h4>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">void SelectionSort(int* A, int n)&#123;\t&#x2F;&#x2F;A:待排序数组指针, n:数组内元素个数\n\tfor(int i &#x3D; 0; i &lt; n; i ++)&#123;\n\t\tint min &#x3D; A[i], minindex &#x3D; i;\n\t\tfor(int j &#x3D; i + 1; j &lt; n; j ++)&#123;\t&#x2F;&#x2F;找出A[i+1...n-1]中最小值下标\n\t\t\tif(A[j] &lt; min)&#123;\n\t\t\t\tmin&#x3D; A[j];\n\t\t\t\tminindex &#x3D; j;\n\t\t\t&#125;\n\t\t&#125;\n\t\tint temp &#x3D; A[i];\t&#x2F;&#x2F;交换最小值与A[i]的值\n\t\tA[i] &#x3D; A[minindex];\n\t\tA[minindex] &#x3D; temp;\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"算法分析\"><a class=\"markdownIt-Anchor\" href=\"#算法分析\"></a> 算法分析:</h4>\n<p>​\t假设一开始整个数组A是无序的,故找出A[0…n-1]当中的最小值,将其<strong>调换至数组起始</strong>,则此时A[1…n-1],即除A[0]外的整个数组,其所包含的元素<strong>均大于等于A[0]的值</strong>,故此时<strong>A[0]有序</strong>,<strong>A[1…n-1]无序</strong>,故再在A[1…n-1]当中找出最小值并调换至A的<strong>有序部分的末端</strong>,依此类推.</p>\n<h4 id=\"运行时间及循环不等式\"><a class=\"markdownIt-Anchor\" href=\"#运行时间及循环不等式\"></a> 运行时间及循环不等式:</h4>\n<h5 id=\"选择排序的循环不等式\"><a class=\"markdownIt-Anchor\" href=\"#选择排序的循环不等式\"></a> 选择排序的循环不等式:</h5>\n<p>​\t当SelectionSort()中循环开始时,A[0…i]中元素为A的前i个<strong>有序排列</strong>的<strong>最小元素</strong>.</p>\n<h5 id=\"选择排序的运行时间\"><a class=\"markdownIt-Anchor\" href=\"#选择排序的运行时间\"></a> 选择排序的运行时间:</h5>\n<p>​\t当i=0时,SelectionSort()的内层循环变量从1自加至n,共<strong>执行n-1次</strong>,易知内层循环<strong>总会执行n-1-i次</strong>,又因为i由0自加至n,故内层循环<strong>一共被执行n-1次</strong>.设其余操作均<strong>花费常量时间</strong>.故:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mi>n</mi><mi>n</mi><mi>e</mi><mi>r</mi></mrow></msub><mo>=</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo>…</mo><mo>+</mo><mn>2</mn><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">T_{inner}=(n-1)+(n-2)+\\ldots+2+1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mord mathdefault mtight\">e</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>​\t这是一个<strong>等差数列求和</strong>,故由:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>k</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo>…</mo><mo>+</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo>=</mo><mfrac><mrow><mi>k</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">其</mi><mi mathvariant=\"normal\">中</mi><mi>k</mi><mo>∈</mo><mi>N</mi><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">k+(k-1)+(k-2)+\\ldots+2+1=\\frac {k(k+1)}2,其中k\\in N+\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">2</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">其</span><span class=\"mord cjk_fallback\">中</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord\">+</span></span></span></span></span></p>\n<p>​\t有:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo>…</mo><mo>+</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">T=(n-1)+(n-2)+\\ldots+2+1=\\frac {(n-1)(n-1+1)}2=\\frac {(n^2-n)}2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">2</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.177108em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">2</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(n)=\\theta (n^2)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<h4 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h4>\n<p>​\t在SelectionSort()运行过程中的<strong>内循环中if语句会执行n^2次</strong>,但仅仅<strong>移动了元素n次</strong>,若元素移动耗时(比如磁盘)或元素大小太大时,可以考虑使用选择排序.</p>\n<h3 id=\"2插入排序\"><a class=\"markdownIt-Anchor\" href=\"#2插入排序\"></a> 2.插入排序</h3>\n<h4 id=\"插入排序的c实现\"><a class=\"markdownIt-Anchor\" href=\"#插入排序的c实现\"></a> 插入排序的C++实现:</h4>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">void InsertionSort(int* A, int n)&#123;\t&#x2F;&#x2F;输入与相同选择排序x&#39;t\n\tfor(int i &#x3D; 1; i &lt; n; i ++)&#123;\n\t\tint key &#x3D; A[i], j &#x3D; i - 1;\t&#x2F;&#x2F;选择要向左比较的数\n\t\twhile(j &gt;&#x3D; 0 &amp;&amp; A[j] &gt; key)&#123;\n\t\t\tA[j + 1] &#x3D; A[j];\t&#x2F;&#x2F;将比key大的数向右移\n\t\t\tj --;\n\t\t&#125;\n\t\tA[j + 1] &#x3D; key;\t&#x2F;&#x2F;将key插入向右移空出的空位\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"算法分析-2\"><a class=\"markdownIt-Anchor\" href=\"#算法分析-2\"></a> 算法分析:</h4>\n<p>​\t假设<strong>整个数组A是无序的</strong>,令i<strong>由1自加到n</strong>,让每个A[i]与子数组A[0…i-1],即A[i]的所有前驱,<strong>从A[i-1]比较至A[0]</strong>,若其前驱<strong>大于</strong>A[i],则令其向<strong>右移一个单位</strong>,若其前驱<strong>小于A[i]或访问数组即将越界</strong>,停止比较,并将A[i]<strong>插入右移元素空出的空位</strong>.</p>\n<h4 id=\"运行时间及循环不变式\"><a class=\"markdownIt-Anchor\" href=\"#运行时间及循环不变式\"></a> 运行时间及循环不变式:</h4>\n<h5 id=\"插入排序的循环不变式\"><a class=\"markdownIt-Anchor\" href=\"#插入排序的循环不变式\"></a> 插入排序的循环不变式:</h5>\n<p>​\t当InsertionSort()中的循环开始迭代时,A[0…i-2]<strong>包含其未被排序时子数组A[0…i-1]的全部元素</strong>,但此时A[0…i-2]<strong>已排好序</strong>.</p>\n<h5 id=\"插入排序的运行时间\"><a class=\"markdownIt-Anchor\" href=\"#插入排序的运行时间\"></a> 插入排序的运行时间:</h5>\n<p>​\t1.最坏情况:</p>\n<p>​\t\t当InsertionSort()中的外层循环开始<strong>第一次执行时</strong>,<strong>A[i]应赋值给A[0]</strong>,即<strong>j从i-1自减至0</strong>,内层循环<strong>执行i次</strong>,此时内层循环<strong>因j&gt;=0不成立,或数组访问越界而停止</strong>.故<strong>外层循环共执行n-1次</strong>,设其他操作<strong>均花费常量时间</strong>.则有执行时间:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mo>…</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>−</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">T(n)=1+2+\\ldots +(n-2)+(n-1)=\\frac {(n-1)(n-1+1)}2=\\frac {(n^2-n)}2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">2</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.177108em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">2</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>​\t故最坏情况下:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(n)=\\theta (n^2)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>​\t2.最好情况:</p>\n<p>​\t\t此时内层循环<strong>会花费常量时间</strong>,故有最好情况下:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(n)=\\theta (n)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>​\t综上所述,运行时间为最好情况θ(n),最坏情况θ(n^2).</p>\n<h3 id=\"3归并排序\"><a class=\"markdownIt-Anchor\" href=\"#3归并排序\"></a> 3.归并排序</h3>\n<h4 id=\"归并排序的c实现\"><a class=\"markdownIt-Anchor\" href=\"#归并排序的c实现\"></a> 归并排序的C++实现:</h4>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">#define INF 0x7FFFFFFF\n\nvoid Merge(int* A, int p, int q, int r)&#123;\t&#x2F;&#x2F;A:待归并数组指针,p:归并区段起始下标,q:归并区段中间点下标,r:归并区段末尾下标\n\tint n1 &#x3D; q - p + 1, n2 &#x3D; r - q, i &#x3D; 0, j &#x3D; 0;\n\tint* B &#x3D; new int[n1 + 1];\t&#x2F;&#x2F;制作两个堆\n\tint* C &#x3D; new int[n2 + 1];\n\tB[n1] &#x3D; INF;\t&#x2F;&#x2F;信号量\n\tC[n2] &#x3D; INF;\n\tfor(int i &#x3D; 0; i &lt; n1; i ++) B[i] &#x3D; A[p + i];\t&#x2F;&#x2F;拷贝元素\n\tfor(int i &#x3D; 0; i &lt; n2; i ++) C[i] &#x3D; A[q+i+1];\n\tfor(int k &#x3D; p; k &lt;&#x3D; r; k ++)&#123;\n\t\tif(B[i] &lt;&#x3D; C[j]) &#123;\n\t\t\tA[k] &#x3D; B[i];\n\t\t\ti ++;\n\t\t&#125; else&#123;\n\t\t\tA[k] &#x3D; C[j];\n\t\t\tj ++;\t\n\t\t&#125;\n\t&#125;\n\tdelete[] B;\n\tdelete[] C;\n&#125;\n\nvoid MergeSort(int* A, int p, int r)&#123;\t&#x2F;&#x2F;A:待排序数组指针,p:起始下标,r:结束下标\n\tif(p &lt; r)&#123;\t&#x2F;&#x2F;若p&gt;&#x3D;r时,A已有序,直接返回\n\t\tint q &#x3D; (p + r) &#x2F; 2;\t&#x2F;&#x2F;分解问题\n\t\tMergeSort(A, p, q);\t&#x2F;&#x2F;递归求解子问题\n\t\tMergeSort(A, q + 1, r);\n\t\tMerge(A, p, q, r);\t&#x2F;&#x2F;合并子问题解\n\t&#125;\n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"算法分析-3\"><a class=\"markdownIt-Anchor\" href=\"#算法分析-3\"></a> 算法分析:</h4>\n<p>​\t<strong>分治法</strong>的一般概述:</p>\n<p>​\t<strong>1.分解</strong>:把一个问题<strong>分解为多个子问题</strong>,这些子问题是<strong>更小实例上的原问题</strong>.</p>\n<p>​\t<strong>2.解决</strong>:<strong>递归地</strong>求解子问题,当子问题<strong>足够小时</strong>,按照<strong>基础情况来求解</strong>.</p>\n<p>​\t<strong>3.合并</strong>:把子问题的解<strong>合并</strong>为原问题的解.</p>\n<p>​\t分治法在归并排序中的应用:</p>\n<p>​\t<strong>1.分解</strong>:通过找到<strong>位于p和r中间位置的下标q</strong>来对问题进行分解,q等于p加r的和除以2,<strong>并向下取整</strong>.</p>\n<p>​\t<strong>2.解决</strong>:对分解步骤的两个子问题的数组进行递归排序,即对A[p…q]和A[q+1…r]<strong>分别进行递归排序</strong>.</p>\n<p>​\t<strong>3.合并</strong>:将A[p…q]和A[q+1…r]这两个<strong>已经排好序的数组</strong>进行合并,使得A[p…r]排好序.</p>\n<p>​\t当子问题的数组中的元素个数<strong>小于等于1时</strong>(即p &gt;= r时),<strong>基础情况发生</strong>,因为一个只包含1个元素或空的数组<strong>总是有序的</strong>.</p>\n<p>​\t<strong>4.合并方式:</strong></p>\n<p>​\t将A[p…q]和A[q+1…r]中的元素<strong>分别制作为两个堆</strong>,并将&quot;无限&quot;(此处的无限可取排序关键字永远不会等于的值)<strong>插入堆底</strong>,易知<strong>两个堆堆顶元素均为其所在堆中最小元素</strong>,故A[p],A[p+1]的值应为B[0],C[0],且A[p] &lt;= A[p+1],依此类推.</p>\n<p>​\t用此方法归并时,易知数组A[p…r]中的每个元素<strong>均被移动了2次</strong>,一次是<strong>制作堆时</strong>,另一次是<strong>将其由堆归入A时</strong>,故当A[p…r]包含n个元素时,归并这一过程<strong>移动了2n次元素</strong>且<strong>至多</strong>比较n次,即<strong>线性时间内</strong>的归并.</p>\n<p>​\t用此方法进行的归并<strong>不是原址的</strong>,虽然我们可以实现线性时间内的原址归并,但是实现方式相当复杂.</p>\n<p>​\t为了避免每归并一对元素时均要检查是否数组访问越界,我们在数组B,C最后<strong>插入一个大于任意元素的值</strong>,与SentinelLinearSearch()相类似.这里使用了#define INF 0x7FFFFFFF来<strong>取int类型占4字节时的最大值</strong>,以INF作为标记的排序关键字,以便一个带有INF的的关键字<strong>是数组中的剩余最小元素时</strong>,<strong>无需</strong>检查哪个数组<strong>还有最小的剩余元素</strong>.</p>\n<p>​\t因为B,C中元素个数差<strong>不会大于1</strong>,故当B,C中<strong>所有的剩余元素归并完时</strong>,B,C的<strong>最小剩余元素均为INF</strong>,但此时循环因为k &gt; r而<strong>退出</strong>,因此<strong>无需</strong>再次比较剩余元素大小.</p>\n<h4 id=\"运行时间\"><a class=\"markdownIt-Anchor\" href=\"#运行时间\"></a> 运行时间</h4>\n<p>​\t归并排序的运行时间T(n)<strong>来自分治法的三个部分耗费时</strong>间的累加和:</p>\n<p>​\t1.分解花费<strong>常量时间</strong>来计算下标q.</p>\n<p>​\t2.解决包括两个数组的递归调用,每个子数组有n/2个元素.定义每个子数组递归调用的<strong>花费时间为T(n/2)</strong>.</p>\n<p>​\t3.通过合并排序好的子数组来合并这两个递归调用的结果<strong>需要花费θ(n)时间</strong>.</p>\n<p>​\t因与合并所需的θ(n)时间相比,分解所需时间<strong>只是一个低阶项,<strong>故可以将分解时间并入合并时间,即分解和合并</strong>共花费θ(n)时间</strong>,解决步骤花费2*T(n/2)时间,故有:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>T</mi><mo stretchy=\"false\">(</mo><mfrac><mi>T</mi><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mo>+</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(n)=2T(\\frac T2)+\\theta (n)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">2</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>​\t在这个等式中,T(n)被用于描述自己,我们称这样一个等式为<strong>递归式</strong>,因为归并排序为一个应用了分治法的算法,故我们可以用一个称之为<strong>主方法</strong>的标准化方法来将T(n)表达为非递归形式.</p>\n<p>​\t<strong>主方法</strong>:</p>\n<p>​\t对于形为如下的递归式:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>T</mi><mo stretchy=\"false\">(</mo><mfrac><mi>n</mi><mi>b</mi></mfrac><mo stretchy=\"false\">)</mo><mo>+</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>a</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>b</mi><mo>∈</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">为</mi><mi mathvariant=\"normal\">渐</mi><mi mathvariant=\"normal\">近</mi><mi mathvariant=\"normal\">正</mi><mi mathvariant=\"normal\">函</mi><mi mathvariant=\"normal\">数</mi></mrow><annotation encoding=\"application/x-tex\">T(n)=aT(\\frac nb)+f(n),a\\in [1,+\\infin),b\\in (1,+\\infin),f(n)为渐近正函数\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">b</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord cjk_fallback\">渐</span><span class=\"mord cjk_fallback\">近</span><span class=\"mord cjk_fallback\">正</span><span class=\"mord cjk_fallback\">函</span><span class=\"mord cjk_fallback\">数</span></span></span></span></span></p>\n<p>​\t其中a,b为参数,且n/b<strong>可能不是整数</strong>,但是对n/b进行向上或向下取整<strong>不影响递归式的渐近性质</strong>.</p>\n<p>​\t主方法主要依赖于<strong>主定理</strong>:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">令</mi><mi>a</mi><mo>⩾</mo><mn>1</mn><mi mathvariant=\"normal\">和</mi><mi>b</mi><mo>&gt;</mo><mn>1</mn><mi mathvariant=\"normal\">是</mi><mi mathvariant=\"normal\">常</mi><mi mathvariant=\"normal\">数</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">是</mi><mi mathvariant=\"normal\">一</mi><mi mathvariant=\"normal\">个</mi><mi mathvariant=\"normal\">函</mi><mi mathvariant=\"normal\">数</mi><mo separator=\"true\">,</mo><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">是</mi><mi mathvariant=\"normal\">定</mi><mi mathvariant=\"normal\">义</mi><mi mathvariant=\"normal\">在</mi><mi mathvariant=\"normal\">非</mi><mi mathvariant=\"normal\">负</mi><mi mathvariant=\"normal\">整</mi><mi mathvariant=\"normal\">数</mi><mi mathvariant=\"normal\">上</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">递</mi><mi mathvariant=\"normal\">归</mi><mi mathvariant=\"normal\">式</mi><mo>:</mo><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>a</mi><mi>T</mi><mo stretchy=\"false\">(</mo><mfrac><mi>n</mi><mi>b</mi></mfrac><mo stretchy=\"false\">)</mo><mo>+</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">令a⩾1和b&gt;1是常数,f(n)是一个函数,T(n)是定义在非负整数上的递归式:\nT(n) = aT(\\frac{n}{b}) + f(n)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7733399999999999em;vertical-align:-0.13667em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩾</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">常</span><span class=\"mord cjk_fallback\">数</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">一</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">函</span><span class=\"mord cjk_fallback\">数</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">定</span><span class=\"mord cjk_fallback\">义</span><span class=\"mord cjk_fallback\">在</span><span class=\"mord cjk_fallback\">非</span><span class=\"mord cjk_fallback\">负</span><span class=\"mord cjk_fallback\">整</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">上</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">递</span><span class=\"mord cjk_fallback\">归</span><span class=\"mord cjk_fallback\">式</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">其</mi><mi mathvariant=\"normal\">中</mi><mi mathvariant=\"normal\">我</mi><mi mathvariant=\"normal\">们</mi><mi mathvariant=\"normal\">将</mi><mfrac><mi>n</mi><mi>b</mi></mfrac><mi mathvariant=\"normal\">解</mi><mi mathvariant=\"normal\">释</mi><mi mathvariant=\"normal\">为</mi><mo stretchy=\"false\">⌈</mo><mfrac><mi>n</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌉</mo><mi mathvariant=\"normal\">或</mi><mo stretchy=\"false\">⌊</mo><mfrac><mi>n</mi><mi>b</mi></mfrac><mo stretchy=\"false\">⌋</mo><mi mathvariant=\"normal\">。</mi><mi mathvariant=\"normal\">那</mi><mi mathvariant=\"normal\">么</mi><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">有</mi><mi mathvariant=\"normal\">如</mi><mi mathvariant=\"normal\">下</mi><mi mathvariant=\"normal\">渐</mi><mi mathvariant=\"normal\">进</mi><mi mathvariant=\"normal\">界</mi><mi mathvariant=\"normal\">：</mi></mrow><annotation encoding=\"application/x-tex\">其中我们将\\frac{n}{b} 解释为 \\lceil\\frac{n}{b}\\rceil或\\lfloor\\frac{n}{b}\\rfloor。那么T(n)有如下渐进界：\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord cjk_fallback\">其</span><span class=\"mord cjk_fallback\">中</span><span class=\"mord cjk_fallback\">我</span><span class=\"mord cjk_fallback\">们</span><span class=\"mord cjk_fallback\">将</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord cjk_fallback\">解</span><span class=\"mord cjk_fallback\">释</span><span class=\"mord cjk_fallback\">为</span><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mord cjk_fallback\">或</span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mord cjk_fallback\">。</span><span class=\"mord cjk_fallback\">那</span><span class=\"mord cjk_fallback\">么</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">如</span><span class=\"mord cjk_fallback\">下</span><span class=\"mord cjk_fallback\">渐</span><span class=\"mord cjk_fallback\">进</span><span class=\"mord cjk_fallback\">界</span><span class=\"mord cjk_fallback\">：</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>1.</mn><mi mathvariant=\"normal\">若</mi><mi mathvariant=\"normal\">对</mi><mi mathvariant=\"normal\">某</mi><mi mathvariant=\"normal\">个</mi><mi mathvariant=\"normal\">常</mi><mi mathvariant=\"normal\">数</mi><mi>ε</mi><mo>&gt;</mo><mn>0</mn><mi mathvariant=\"normal\">有</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi><mo>−</mo><mi>ε</mi></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">则</mi><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"normal\">Θ</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mo stretchy=\"false\">)</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">多</mi><mi mathvariant=\"normal\">项</mi><mi mathvariant=\"normal\">式</mi><mi mathvariant=\"normal\">意</mi><mi mathvariant=\"normal\">义</mi><mi mathvariant=\"normal\">上</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">小</mi><mi mathvariant=\"normal\">于</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">渐</mi><mi mathvariant=\"normal\">进</mi><mi mathvariant=\"normal\">小</mi><mi mathvariant=\"normal\">于</mi><mo stretchy=\"false\">)</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1.若对某个常数\\varepsilon &gt;0有f(n)=O(n^{log_{b}a-\\varepsilon}),则T(n) = \\Theta(n^{log_{b}a})f(n)多项式意义上的小于(渐进小于)n^{log_{b}a}n\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord cjk_fallback\">若</span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">某</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">常</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord mathdefault\">ε</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault mtight\">a</span><span class=\"mbin mtight\">−</span><span class=\"mord mathdefault mtight\">ε</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">则</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\">Θ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault mtight\">a</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">多</span><span class=\"mord cjk_fallback\">项</span><span class=\"mord cjk_fallback\">式</span><span class=\"mord cjk_fallback\">意</span><span class=\"mord cjk_fallback\">义</span><span class=\"mord cjk_fallback\">上</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">小</span><span class=\"mord cjk_fallback\">于</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">渐</span><span class=\"mord cjk_fallback\">进</span><span class=\"mord cjk_fallback\">小</span><span class=\"mord cjk_fallback\">于</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault mtight\">a</span></span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">n</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2.</mn><mi mathvariant=\"normal\">若</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"normal\">Θ</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mi>l</mi><msup><mi>g</mi><mi>k</mi></msup><mi>n</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">则</mi><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"normal\">Θ</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mi>l</mi><msup><mi>g</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msup><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">2.若f(n) = \\Theta(n^{log_{b}a}lg^kn),则T(n) = \\Theta(n^{log_{b}a}lg^{k+1}n)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord\">.</span><span class=\"mord cjk_fallback\">若</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\">Θ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault mtight\">a</span></span></span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">则</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\">Θ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault mtight\">a</span></span></span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">若</mi><mi mathvariant=\"normal\">对</mi><mi mathvariant=\"normal\">某</mi><mi mathvariant=\"normal\">个</mi><mi mathvariant=\"normal\">常</mi><mi mathvariant=\"normal\">数</mi><mi>ε</mi><mo>&gt;</mo><mn>0</mn><mi mathvariant=\"normal\">有</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"normal\">Ω</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi><mo>+</mo><mi>ε</mi></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">且</mi><mi mathvariant=\"normal\">对</mi><mi mathvariant=\"normal\">于</mi><mi mathvariant=\"normal\">某</mi><mi mathvariant=\"normal\">个</mi><mi mathvariant=\"normal\">常</mi><mi mathvariant=\"normal\">数</mi><mi>c</mi><mo>&lt;</mo><mn>1</mn><mi mathvariant=\"normal\">和</mi><mi mathvariant=\"normal\">所</mi><mi mathvariant=\"normal\">有</mi><mi mathvariant=\"normal\">充</mi><mi mathvariant=\"normal\">分</mi><mi mathvariant=\"normal\">大</mi><mi mathvariant=\"normal\">的</mi><mi>n</mi><mi mathvariant=\"normal\">有</mi><mi>a</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mfrac><mi>n</mi><mi>b</mi></mfrac><mo stretchy=\"false\">)</mo><mo>⩽</mo><mi>c</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">那</mi><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"normal\">Θ</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">多</mi><mi mathvariant=\"normal\">项</mi><mi mathvariant=\"normal\">式</mi><mi mathvariant=\"normal\">意</mi><mi mathvariant=\"normal\">义</mi><mi mathvariant=\"normal\">上</mi><mi mathvariant=\"normal\">的</mi><mi mathvariant=\"normal\">大</mi><mi mathvariant=\"normal\">于</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">渐</mi><mi mathvariant=\"normal\">进</mi><mi mathvariant=\"normal\">大</mi><mi mathvariant=\"normal\">于</mi><mo stretchy=\"false\">)</mo><msup><mi>n</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>b</mi></msub><mi>a</mi></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(若对某个常数\\varepsilon &gt; 0有f(n) = \\Omega(n^{log_{b}a+\\varepsilon}),且对于某个常数c&lt;1和所有充分大的n有af(\\frac{n}{b}) \\leqslant c,那T(n)=\\Theta(f(n)).(f(n)多项式意义上的大于(渐进大于)n^{log_{b}a})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">若</span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">某</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">常</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord mathdefault\">ε</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\">Ω</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault mtight\">a</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\">ε</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">且</span><span class=\"mord cjk_fallback\">对</span><span class=\"mord cjk_fallback\">于</span><span class=\"mord cjk_fallback\">某</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">常</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord cjk_fallback\">所</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">充</span><span class=\"mord cjk_fallback\">分</span><span class=\"mord cjk_fallback\">大</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord mathdefault\">n</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">那</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\">Θ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord\">.</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">多</span><span class=\"mord cjk_fallback\">项</span><span class=\"mord cjk_fallback\">式</span><span class=\"mord cjk_fallback\">意</span><span class=\"mord cjk_fallback\">义</span><span class=\"mord cjk_fallback\">上</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">大</span><span class=\"mord cjk_fallback\">于</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">渐</span><span class=\"mord cjk_fallback\">进</span><span class=\"mord cjk_fallback\">大</span><span class=\"mord cjk_fallback\">于</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.03588em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault mtight\">a</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>​\t故可知T(n)=θ(nlgn).该运行时间<strong>适合于归并排序的所有情况</strong>.</p>\n<h3 id=\"4快速排序\"><a class=\"markdownIt-Anchor\" href=\"#4快速排序\"></a> 4.快速排序</h3>\n<h4 id=\"快速排序的c实现\"><a class=\"markdownIt-Anchor\" href=\"#快速排序的c实现\"></a> 快速排序的C++实现:</h4>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">int Partition(int* A, int p, int r)&#123;\n\tint q &#x3D; p;\n\tfor(int u &#x3D; p; u &lt; r; u ++)&#123;\n\t\tif(A[u] &lt;&#x3D; A[r])&#123;\n\t\t\tint temp &#x3D; A[u];\n\t\t\tA[u] &#x3D; A[q];\n\t\t\tA[q] &#x3D; temp;\n\t\t\tq ++;\n\t\t&#125;\n\t&#125;\n\tint temp &#x3D; A[r];\n\tA[r] &#x3D; A[q];\n\tA[q] &#x3D; temp;\n\treturn q;\n&#125;\n\nvoid QuickSort(int* A, int p, int r)&#123;\n\tif(p &lt; r)&#123;\n\t\tint q &#x3D; Partition(A, p, r);\n\t\tQuickSort(A, p, q - 1);\n\t\tQuickSort(A, q + 1, r);\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"算法分析-4\"><a class=\"markdownIt-Anchor\" href=\"#算法分析-4\"></a> 算法分析:</h4>\n<p>​\t快速排序也使用了分治法,故有描述如下:</p>\n<p>​\t<strong>1.分解</strong>:首先选择A[p…r]中的一个元素,称为<strong>主元</strong>,对数组A中除了主元外的元素进行排序,让小于等于主元的元素排在<strong>主元的左侧</strong>,让所有大于主元的元素排在<strong>主元的右侧</strong>,我们称这一过程为<strong>划分</strong>.注意,划分后主元左侧的所有元素和主元右侧的所有元素均是<strong>无序的</strong>.</p>\n<p>​\t<strong>2.解决</strong>:通过<strong>递归地</strong>对主元左侧的和右侧的元素进行排序来解决子问题,也就是说,若分解步骤将主元移动到位置q,随后就会递归地对从p到q-1的元素进行排序,同时对q+1到r的元素进行排序.</p>\n<p>​\t<strong>3.合并</strong>:经过前两个步骤后,数组A<strong>已经有序</strong>,因此不需合并.</p>\n<p>​\t与归并排序相同,当待排序的<strong>子数组元素数量小于等于1时</strong>,基础情况发生.</p>\n<p>​\t<strong>快速排序的关键是划分数组</strong>,与归并排序相同的是,我们同样能在θ(n)时间内划分n个元素,选择<strong>数组A中的末尾元素</strong>,即A[r],作为主元,任意时刻,A[p…r-1]中的元素将会被划分到下列4个组的一个组中,<strong>且这四个组均位于A[p…r]中</strong>.按<strong>空间顺序从前向后排列</strong>依次是:</p>\n<p>​\t<strong>组L(左侧组)</strong>:此组中所包含的元素均<strong>小于等于主元</strong>,即A[p…q-1].</p>\n<p>​\t<strong>组R(右侧组)</strong>:此组中所包含的元素均<strong>大于主元</strong>,即A[q…u-1].</p>\n<p>​\t<strong>组U(未知组)</strong>:此组中所包含的元素<strong>还未与主元比较</strong>,即A[u…r-1].</p>\n<p>​\t<strong>组P(主元)</strong>:即主元,或A[r].</p>\n<p>​\t快速排序<strong>自左向右</strong>检查组U中的元素,将它们与主元进行比较,并将它们移动到组L或组R中,一旦<strong>检查到主元位置处</strong>,<strong>就停止所有操作</strong>.与主元进行比较的元素<strong>始终是组U中最左侧</strong>的元素.</p>\n<p>​\t(1).若组U中的元素大于主元,就将<strong>组R和组U之间的界限向右移1个单位</strong>.故此时比较的组U中元素成为组R中最后的元素.</p>\n<p>​\t(2).若组U中的元素小于等于主元,则<strong>将此元素与组R最前的元素进行调换</strong>,并将<strong>组L和组R,组R和组U之间的界限均向右移1个单位</strong>.</p>\n<p>​\t(3).一旦检查到主元位置,就<strong>将主元与组R最前的元素</strong>调换.</p>\n<p>​\t快速排序<strong>将数组中每个除主元外的元素与主元比较1次</strong>,当元素<strong>小于等于</strong>主元时<strong>会产生一次调换</strong>.因此,划分n个元素时,快速排序<strong>至多</strong>进行<strong>n-1次比较</strong>(主元无需比较),<strong>至多</strong>进行<strong>n次调换</strong>.并且划分这一过程是<strong>完全原址的</strong>.</p>\n<h4 id=\"运行时间及循环不变式-2\"><a class=\"markdownIt-Anchor\" href=\"#运行时间及循环不变式-2\"></a> 运行时间及循环不变式</h4>\n<h5 id=\"快速排序的循环不变式\"><a class=\"markdownIt-Anchor\" href=\"#快速排序的循环不变式\"></a> 快速排序的循环不变式:</h5>\n<p>​\t划分过程中四个组的划分方式即为此算法的循环不变式,这里不再赘述.</p>\n<h5 id=\"快速排序的运行时间\"><a class=\"markdownIt-Anchor\" href=\"#快速排序的运行时间\"></a> 快速排序的运行时间:</h5>\n<p>​\t设每次比较和调换操作<strong>均花费常量时间</strong>,故对包含n个元素的子数组进行划分操作<strong>需要的总时间是θ(n)</strong>.</p>\n<p>​\t在最坏情况下,即A为<strong>逆序的</strong>,划分得到的大小是<strong>相当不均衡</strong>的,若除了主元之外的所有元素<strong>均小于主元</strong>,则划分的结果是A[p…r-1],<strong>即除去主元的剩余部分</strong>,且QuickSort()最终会返回在q中的索引r值.这种情况下,A[q+1…r]是<strong>空的</strong>,且A[p…q-1]仅仅比A[p…r]<strong>少一个元素</strong>.对空的子数组进行递归调用需要θ(1)时间,对于划分,我们可以<strong>将θ(1)并入θ(n)时间内</strong>,但是如果A[p…r]有<strong>n个元素</strong>,那么A[p…q-1]<strong>有n-1个元素</strong>,故对A[p…q-1]进行递归调用<strong>需要花费T(n-1)时间</strong>,故有:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>⇒</mo><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(n)=T(n-1)+\\theta (n)\\Rightarrow T(n)=\\theta (n^2)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>​\t另一方面,若每次都能得到一个<strong>均匀的划分</strong>,则每个子数组<strong>最多有n/2个元素</strong>,故有:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>T</mi><mo stretchy=\"false\">(</mo><mfrac><mi>n</mi><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mo>+</mo><mi>θ</mi><mi>n</mi><mo>⇒</mo><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>θ</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(n)=2T(\\frac n2)+\\theta n\\Rightarrow T(n)=\\theta (nlgn)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">2</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\">n</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>​\t一般而言,当输入数组为<strong>完全随机产生时</strong>,T(n)≈θ(nlgn).</p>\n<p>​\t我们也可以在A[p…r]中<strong>随机选取3个元素</strong>,并将这3个元素中<strong>值介于其他两个元素的元素</strong>设为主元,即与A[r]调换,这称为<strong>随机快速排序</strong>,上文所述称为<strong>确定的快速排序</strong>.</p>\n<h3 id=\"5多种比较排序算法的用时比较\"><a class=\"markdownIt-Anchor\" href=\"#5多种比较排序算法的用时比较\"></a> 5.多种比较排序算法的用时比较</h3>\n<h4 id=\"理论用时\"><a class=\"markdownIt-Anchor\" href=\"#理论用时\"></a> 理论用时:</h4>\n<table>\n<thead>\n<tr>\n<th>比较排序算法</th>\n<th>最坏情况下运行时间</th>\n<th>最好情况下运行时间</th>\n<th>最坏情况下调换次数</th>\n<th>是否原址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>选择排序</td>\n<td>θ(n^2)</td>\n<td>θ(n^2)</td>\n<td>θ()</td>\n<td>是</td>\n</tr>\n<tr>\n<td>插入排序</td>\n<td>θ(n^2)</td>\n<td>θ(n)</td>\n<td>θ(n^2)</td>\n<td>是</td>\n</tr>\n<tr>\n<td>归并排序</td>\n<td>θ(nlgn)</td>\n<td>θ(nlgn)</td>\n<td>θ(nlgn)</td>\n<td>否</td>\n</tr>\n<tr>\n<td>快速排序</td>\n<td>θ(n^2)</td>\n<td>θ(nlgn)</td>\n<td>θ(n^2)</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"实际用时\"><a class=\"markdownIt-Anchor\" href=\"#实际用时\"></a> 实际用时:</h4>\n<p>​\t实现语言:C++14</p>\n<p>​\t编译器:MSVC v143 优化/O2</p>\n<p>​\t操作系统:Windows 11 家庭中文版 22468.1000</p>\n<p>​\t处理器:Intel Core i9-8950HK 2.90GHz</p>\n<p>​\t内存:32GB 2667MHz</p>\n<p>​\t数据规模:由50至500000个随机产生的int类型元素,范围由0至2147483647</p>\n<p>​\t测试方式:每种算法独立运行20次取花费时间平均值</p>\n<table>\n<thead>\n<tr>\n<th>算法</th>\n<th>n=50</th>\n<th>n=100</th>\n<th>n=500</th>\n<th>n=1000</th>\n<th>n=5000</th>\n<th>n=10000</th>\n<th>n=50000</th>\n<th>n=100000</th>\n<th>n=500000</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>插入排序</td>\n<td>&lt;0.01ms</td>\n<td>&lt;0.01ms</td>\n<td>&lt;0.01ms</td>\n<td>0.2ms</td>\n<td>2.65ms</td>\n<td>10.55ms</td>\n<td>249.25ms</td>\n<td>1151.05ms</td>\n<td>39167.6ms</td>\n</tr>\n<tr>\n<td>选择排序</td>\n<td>&lt;0.01ms</td>\n<td>&lt;0.01ms</td>\n<td>0.05ms</td>\n<td>0.3ms</td>\n<td>10.1ms</td>\n<td>39.2ms</td>\n<td>907.6ms</td>\n<td>3805.5ms</td>\n<td>126624ms</td>\n</tr>\n<tr>\n<td>归并排序</td>\n<td>0.05ms</td>\n<td>0.05ms</td>\n<td>0.1ms</td>\n<td>0.2ms</td>\n<td>2.1ms</td>\n<td>4.8ms</td>\n<td>13.6ms</td>\n<td>30.6ms</td>\n<td>115.8ms</td>\n</tr>\n<tr>\n<td>确定的快速排序</td>\n<td>&lt;0.01ms</td>\n<td>&lt;0.01ms</td>\n<td>&lt;0.01ms</td>\n<td>0.15ms</td>\n<td>0.15ms</td>\n<td>0.25ms</td>\n<td>3.55ms</td>\n<td>7.5ms</td>\n<td>29.6ms</td>\n</tr>\n<tr>\n<td>随机快速排序</td>\n<td>&lt;0.01ms</td>\n<td>&lt;0.01ms</td>\n<td>0.1ms</td>\n<td>0.1ms</td>\n<td>0.45ms</td>\n<td>0.75ms</td>\n<td>4.4ms</td>\n<td>8.95ms</td>\n<td>39.6ms</td>\n</tr>\n</tbody>\n</table>\n<p><em>这个测试结果跟《算法基础》测的的数据有些偏差,譬如选择排序耗时几乎是相同情况下插入排序的3-4倍,甚至更多,随机快速排序比相同情况下确定的快速排序要慢等情况,碍于篇幅,我会在另一篇单独的文章中放出实现源代码.</em></p>\n<p><em>另:Aurora主题似乎还不支持使用MathJax渲染数学公式,也只能这样了w.</em></p>\n","text":" 《算法基础》学习笔记 二.比较排序算法 0.定义: ​ 只使用对排序关键字的比较操作来进行排序的算法,称为比较排序算法. ​ 此处仅讨论对将数组排序成递增顺序的排序算法,即数组中每个元素均大于等于其前驱.要进行递增的比较排序,需要定义排序关键字的&quot;小于&quot;等判...","link":"","photos":[],"count_time":{"symbolsCount":"9.6k","symbolsTime":"9 mins."},"categories":[{"name":"算法基础","slug":"算法基础","count":3,"path":"api/categories/算法基础.json"},{"name":"Algorithms Unlocked","slug":"算法基础/Algorithms-Unlocked","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked.json"},{"name":"学习笔记","slug":"算法基础/Algorithms-Unlocked/学习笔记","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked/学习笔记.json"}],"tags":[{"name":"Notes","slug":"Notes","count":4,"path":"api/tags/Notes.json"},{"name":"Sort","slug":"Sort","count":4,"path":"api/tags/Sort.json"},{"name":"排序算法","slug":"排序算法","count":3,"path":"api/tags/排序算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\"><span class=\"toc-text\"> 《算法基础》学习笔记</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E6%AF%94%E8%BE%83%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95\"><span class=\"toc-text\"> 二.比较排序算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\"> 0.定义:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\"> 1.选择排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E7%9A%84c%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> 选择排序的C++实现:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\"> 算法分析:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E5%8F%8A%E5%BE%AA%E7%8E%AF%E4%B8%8D%E7%AD%89%E5%BC%8F\"><span class=\"toc-text\"> 运行时间及循环不等式:</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E7%9A%84%E5%BE%AA%E7%8E%AF%E4%B8%8D%E7%AD%89%E5%BC%8F\"><span class=\"toc-text\"> 选择排序的循环不等式:</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4\"><span class=\"toc-text\"> 选择排序的运行时间:</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\"> 总结</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\"> 2.插入排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%9A%84c%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> 插入排序的C++实现:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90-2\"><span class=\"toc-text\"> 算法分析:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E5%8F%8A%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F\"><span class=\"toc-text\"> 运行时间及循环不变式:</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%9A%84%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F\"><span class=\"toc-text\"> 插入排序的循环不变式:</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4\"><span class=\"toc-text\"> 插入排序的运行时间:</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\"> 3.归并排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%9A%84c%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> 归并排序的C++实现:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90-3\"><span class=\"toc-text\"> 算法分析:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4\"><span class=\"toc-text\"> 运行时间</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\"> 4.快速排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%9A%84c%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> 快速排序的C++实现:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90-4\"><span class=\"toc-text\"> 算法分析:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E5%8F%8A%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F-2\"><span class=\"toc-text\"> 运行时间及循环不变式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%9A%84%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E5%BC%8F\"><span class=\"toc-text\"> 快速排序的循环不变式:</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4\"><span class=\"toc-text\"> 快速排序的运行时间:</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5%E5%A4%9A%E7%A7%8D%E6%AF%94%E8%BE%83%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E7%94%A8%E6%97%B6%E6%AF%94%E8%BE%83\"><span class=\"toc-text\"> 5.多种比较排序算法的用时比较</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%90%86%E8%AE%BA%E7%94%A8%E6%97%B6\"><span class=\"toc-text\"> 理论用时:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%99%85%E7%94%A8%E6%97%B6\"><span class=\"toc-text\"> 实际用时:</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Minecraft1248","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/10/89a7ea01b14a6553.jpg","link":"/","description":"Helium项目开发人员lol","socials":{"github":"https://github.com/Minecraft1248","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/270016803"}}}},"mapped":true,"prev_post":{"title":"《算法基础》学习笔记-线性搜索算法","uid":"2e4dd07c9efba521a4f50b17ccdbb5c4","slug":"Algorithm-Unlocked-Note-2021-10-29-linear-search","date":"2021-10-29T10:28:24.000Z","updated":"2021-10-31T04:00:05.821Z","comments":true,"path":"api/articles/Algorithm-Unlocked-Note-2021-10-29-linear-search.json","keywords":"Minecraft1248","cover":"https://s3.bmp.ovh/imgs/2021/10/5bcb09e1b9a4aeb0.jpg","text":" 《算法基础》学习笔记 一.线性搜索算法 《算法基础》在讲下列算法之前是在讲变量,循环等基础,而且我确信有点基础的人第一个想出来的线性搜索算法也应该是原书中BetterLinearSearch()这样的,故直接跳过 1.BetterLinearSearch() C++实现: #d...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"算法基础","slug":"算法基础","count":3,"path":"api/categories/算法基础.json"},{"name":"Algorithms Unlocked","slug":"算法基础/Algorithms-Unlocked","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked.json"},{"name":"学习笔记","slug":"算法基础/Algorithms-Unlocked/学习笔记","count":3,"path":"api/categories/算法基础/Algorithms-Unlocked/学习笔记.json"}],"tags":[{"name":"Notes","slug":"Notes","count":4,"path":"api/tags/Notes.json"},{"name":"Sort","slug":"Sort","count":4,"path":"api/tags/Sort.json"},{"name":"线性搜索算法","slug":"线性搜索算法","count":1,"path":"api/tags/线性搜索算法.json"}],"author":{"name":"Minecraft1248","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/10/89a7ea01b14a6553.jpg","link":"/","description":"Helium项目开发人员lol","socials":{"github":"https://github.com/Minecraft1248","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/270016803"}}}}},"next_post":{"title":"Helium项目开发进度-2021/10/10","uid":"be472a5bafbe1f7cb019e7ee835fb39d","slug":"helium-develop-progress-2021-10-10","date":"2021-10-09T16:53:28.000Z","updated":"2021-10-09T18:45:27.703Z","comments":true,"path":"api/articles/helium-develop-progress-2021-10-10.json","keywords":"Minecraft1248","cover":"https://s3.bmp.ovh/imgs/2021/10/c6091162b41668f1.png","text":"首先,要提前说明一下的是,Helium是对MCDReforged_By_CPP的一次几乎完全的重写,所以当你看到我们的开发进度特别慢的时候也不要感到太惊讶plz,我们的开发人员真的个个学业压力巨大(落泪). 已经完成或大体成型的代码 配置文件读写部分: -config.cpp -...","link":"","photos":[],"count_time":{"symbolsCount":636,"symbolsTime":"1 mins."},"categories":[{"name":"Helium","slug":"Helium","count":2,"path":"api/categories/Helium.json"}],"tags":[{"name":"Helium","slug":"Helium","count":2,"path":"api/tags/Helium.json"},{"name":"Github","slug":"Github","count":2,"path":"api/tags/Github.json"}],"author":{"name":"Minecraft1248","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2021/10/89a7ea01b14a6553.jpg","link":"/","description":"Helium项目开发人员lol","socials":{"github":"https://github.com/Minecraft1248","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/270016803"}}}}}}